<?php
/**
 * DocumentTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Billingo API v3
 *
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.9
 * Contact: hello@billingo.hu
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.21
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * DocumentTest Class Doc Comment
 *
 * @category    Class
 * @description Document object representing your invoice. NOTE: partner property is deprecated. Please use document_partner instead.
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class DocumentTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Document"
     */
    public function testDocument()
    {
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
    }

    /**
     * Test attribute "invoice_number"
     */
    public function testPropertyInvoiceNumber()
    {
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
    }

    /**
     * Test attribute "cancelled"
     */
    public function testPropertyCancelled()
    {
    }

    /**
     * Test attribute "block_id"
     */
    public function testPropertyBlockId()
    {
    }

    /**
     * Test attribute "payment_status"
     */
    public function testPropertyPaymentStatus()
    {
    }

    /**
     * Test attribute "payment_method"
     */
    public function testPropertyPaymentMethod()
    {
    }

    /**
     * Test attribute "gross_total"
     */
    public function testPropertyGrossTotal()
    {
    }

    /**
     * Test attribute "currency"
     */
    public function testPropertyCurrency()
    {
    }

    /**
     * Test attribute "conversion_rate"
     */
    public function testPropertyConversionRate()
    {
    }

    /**
     * Test attribute "invoice_date"
     */
    public function testPropertyInvoiceDate()
    {
    }

    /**
     * Test attribute "fulfillment_date"
     */
    public function testPropertyFulfillmentDate()
    {
    }

    /**
     * Test attribute "due_date"
     */
    public function testPropertyDueDate()
    {
    }

    /**
     * Test attribute "paid_date"
     */
    public function testPropertyPaidDate()
    {
    }

    /**
     * Test attribute "organization"
     */
    public function testPropertyOrganization()
    {
    }

    /**
     * Test attribute "partner"
     */
    public function testPropertyPartner()
    {
    }

    /**
     * Test attribute "document_partner"
     */
    public function testPropertyDocumentPartner()
    {
    }

    /**
     * Test attribute "electronic"
     */
    public function testPropertyElectronic()
    {
    }

    /**
     * Test attribute "comment"
     */
    public function testPropertyComment()
    {
    }

    /**
     * Test attribute "tags"
     */
    public function testPropertyTags()
    {
    }

    /**
     * Test attribute "notification_status"
     */
    public function testPropertyNotificationStatus()
    {
    }

    /**
     * Test attribute "language"
     */
    public function testPropertyLanguage()
    {
    }

    /**
     * Test attribute "items"
     */
    public function testPropertyItems()
    {
    }

    /**
     * Test attribute "summary"
     */
    public function testPropertySummary()
    {
    }

    /**
     * Test attribute "settings"
     */
    public function testPropertySettings()
    {
    }
}
